// <vlier> -*- C++ -*-
/*
	vlier - visualize data in Unicode Block Character
	Copyright (C) 2019 Mivik

	This file is part of the DimenX library. This library is free
	software: you can redistribute it and/or modify it under the terms
	of the GNU General Public License as published by the Free Software
	Foundation, either version 3 of the License, or (at your option)
	any later version.

	This library is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this library.  If not, see <https://www.gnu.org/licenses/>.
*/

#ifndef __DIMENX_VLIER_H_
#define __DIMENX_VLIER_H_

#include <cwchar>
#include <climits>
#include <clocale>

#include <dimenx/mcli>

namespace dimenx {
namespace vlier {

inline void init() {
	mcli::init();
	setlocale(LC_ALL,getenv("LANG"));
}

inline wchar_t vblock(int h) { return 0x2580+h; }

inline void vvli(int *a, int len, int w=1, int h=1) {
	int i,j,k;
	int hh=h<<3;
	int mmax=INT_MIN;
	for (i=0;i<len;i++) if (a[i]>mmax) mmax=a[i];
	int s[len];
	for (i=0;i<len;i++) s[i]=((long long)a[i]*hh+(mmax>>1))/mmax;
	for (i=h;i;i--) {
		int ww=i<<3;
		for (j=0;j<len;j++) {
			wchar_t c;
			if (s[j]>=ww) c=vblock(8);
			else if (s[j]>ww-8) c=vblock(s[j]-ww+8);
			else c=L' ';
			for (k=0;k<w;k++) putwchar(c);
		}
		putwchar(L'\n');
	}
}

inline wchar_t hblock(int w) { return 0x2590-w; }

inline void hvli(int *a, int len, int w=1, int h=1) {
	int i,j,k;
	int ww=w<<3;
	int mmax=INT_MIN;
	for (i=0;i<len;i++) if (a[i]>mmax) mmax=a[i];
	for (i=0;i<len;i++) {
		int we=((long long)a[i]*ww+(mmax>>1))/mmax;
		for (j=0;j<h;j++) {
			for (k=0;k+8<=we;k+=8) putwchar(hblock(8));
			putwchar(hblock(we-k));
			putwchar(L'\n');
		}
	}
}

};
};

#endif