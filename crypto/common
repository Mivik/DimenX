// <crypto/common> -*- C++ -*-
/*
	crypto - Common utils for crypto
	Copyright (C) 2019 Mivik

	This file is part of the DimenX library. This library is free
	software: you can redistribute it and/or modify it under the terms
	of the GNU General Public License as published by the Free Software
	Foundation, either version 3 of the License, or (at your option)
	any later version.

	This library is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this library.  If not, see <https://www.gnu.org/licenses/>.
*/

#ifndef __DIMENX_CRYPTO_COMMON_H_
#define __DIMENX_CRYPTO_COMMON_H_

namespace dimenx {
namespace crypto {

typedef unsigned char byte;
typedef unsigned int uint32;
typedef unsigned long long uint64;

inline const char *Bytes2Hex(const byte *input, size_t len, bool upper=false, char *output=NULL) {
#define b2h(c) (((c)>=10)?((c)-10+(upper?'A':'a')):(c+'0'))
	char *ret=output;
	if (!ret) ret=(char*)malloc(len<<1);
	byte ww;
	for (size_t i=0,j=0;i<len;++i,j+=2) {
		ww=input[j]&15;
		ret[j]=b2h(ww);
		ww=(input[j]>>4)&15;
		ret[j|1]=b2h(ww);
	}
	return ret;
#undef b2h
}

};
};

#endif